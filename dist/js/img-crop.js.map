{"version":3,"sources":["img-crop.js"],"names":["Crop","options","self","upload_btn","remove_btn","form","input","preview","preview_inner","img_el","crop_overlay","choose_image","dispatchEvent","MouseEvent","view","window","bubbles","cancelable","show_preview","files","reader","FileReader","onload","e","style","display","src","target","result","classList","remove","children","add","_upload_image","name","readAsDataURL","_update_offset","img_name","img_data","method","body","JSON","stringify","data","file_name","headers","Headers","fetch","then","response","text","uploaded_filename","img_url","remove_preview","document","createElement","type","addEventListener","element","querySelector","appendChild","preview_img","_update_preview","cur_side","_side_click_start","el","index","Array","prototype","indexOf","call","parentElement","_side_move","preventDefault","cur_corner","_corner_click_start","_corner_move","_top","pageY","preview_offset","top","clientHeight","_old_top","crop_area","Math","round","height","ratio","_old_width","width","left","_bottom","_left","pageX","clientWidth","_old_left","_old_height","_right","_update_overlay","_area_drag","last_position","deltaX","clientX","x","deltaY","clientY","y","new_pos","Object","assign","_convert_to_px","area","getBoundingClientRect","max","scale","naturalWidth","img_options","img","dim","base64_preview","value","total","number","parseFloat","replace","unit","_throttle","callback","limit","wait","apply","arguments","setTimeout","generate_crop_template","_upload_img","alt","_remove_img","action","_placeholder","textContent","i","bind_events","contains","removeEventListener"],"mappings":"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","sourcesContent":["function Crop(options) {\r\n    var self = this\r\n\r\n    /* Scope all elements */\r\n    let upload_btn, remove_btn, form, input, preview, preview_inner, img_el, crop_overlay\r\n\r\n\r\n\r\n    /* ---------------- */\r\n    /*  Crop Functions  */\r\n    /* ---------------- */\r\n\r\n    /* Open file browser */\r\n    self.choose_image = () => {\r\n        input.dispatchEvent(new MouseEvent('click', {\r\n            view: window,\r\n            bubbles: true,\r\n            cancelable: true\r\n        }))\r\n    }\r\n\r\n    /* Show image preview */\r\n    function show_preview() {\r\n        if (input.files && input.files[0]) {\r\n            let reader = new FileReader()\r\n            reader.onload = (e) => {\r\n                img_el.style.display = 'block'\r\n                img_el.src = e.target.result\r\n                preview.classList.remove('no-img')\r\n                preview.children[0].classList.add('hidden')\r\n                _upload_image(input.files[0].name, img_el.src)\r\n            }\r\n            reader.readAsDataURL(input.files[0])\r\n        }\r\n        _update_offset()\r\n    }\r\n\r\n    /* Upload image */\r\n    function _upload_image(img_name, img_data) {\r\n        let options = {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                data: img_data,\r\n                file_name: img_name\r\n            }),\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json'\r\n            })\r\n        }\r\n        fetch('/upload', options)\r\n            .then(response => response.text())\r\n            .then(uploaded_filename => {\r\n                if (uploaded_filename !== 'error') {\r\n                    self.img_url = uploaded_filename\r\n                    img_el.src = '/uploads/' + self.img_url\r\n                }\r\n            })\r\n    }\r\n\r\n    /* Remove image preview */\r\n    function remove_preview() {\r\n        img_el.style.display = 'none'\r\n        preview.classList.add('no-img')\r\n        preview.children[0].classList.remove('hidden')\r\n        /* Replace input element */\r\n        input.remove()\r\n        input = document.createElement('input')\r\n        input.type = 'file'\r\n        input.classList.add('hidden')\r\n        input.addEventListener('change', show_preview, false)\r\n        self.element.querySelector('form').appendChild(input)\r\n        self.img_url = ''\r\n        self.preview_img.src = ''\r\n        self._update_preview()\r\n    }\r\n\r\n    var cur_side\r\n    function _side_click_start(e) {\r\n        cur_side = {\r\n            el: e.target,\r\n            index: Array.prototype.indexOf.call(e.target.parentElement.children, e.target) + 1\r\n        }\r\n        document.addEventListener('mousemove', _side_move, false)\r\n        e.preventDefault()\r\n        return false\r\n    }\r\n\r\n    var cur_corner\r\n    function _corner_click_start(e) {\r\n        cur_corner = {\r\n            el: e.target,\r\n            index: Array.prototype.indexOf.call(e.target.parentElement.children, e.target) - 3\r\n        }\r\n        document.addEventListener('mousemove', _corner_move, false)\r\n        e.preventDefault()\r\n        return false\r\n    }\r\n\r\n    function _side_move(e) {\r\n        if (cur_side.index == 1) {\r\n            // Top\r\n            let _top = e.pageY - self.preview_offset.top\r\n            if (_top < preview_inner.clientHeight && _top > 0) {\r\n                let _old_top = self.crop_area.top\r\n                self.crop_area.top = Math.round(_top)\r\n                self.crop_area.height -= self.crop_area.top - _old_top\r\n                if (options.ratio) {\r\n                    let _old_width = self.crop_area.width\r\n                    self.crop_area.width = self.crop_area.height * options.ratio\r\n                    self.crop_area.left -= self.crop_area.width - _old_width\r\n                }\r\n            }\r\n        } else if (cur_side.index == 3) {\r\n            // Bottom\r\n            let _bottom = (self.preview_offset.top + preview_inner.clientHeight) - e.pageY\r\n            if (_bottom < preview_inner.clientHeight - self.crop_area.top && _bottom > 0) {\r\n                self.crop_area.height = Math.round(preview_inner.clientHeight - self.crop_area.top - _bottom)\r\n                if (options.ratio) {\r\n                    self.crop_area.width = self.crop_area.height * options.ratio\r\n                }\r\n            }\r\n        } else if (cur_side.index == 4) {\r\n            // Left\r\n            let _left = e.pageX - self.preview_offset.left\r\n            if (_left < preview_inner.clientWidth && _left > 0) {\r\n                let _old_left = self.crop_area.left\r\n                self.crop_area.left = Math.round(_left)\r\n                self.crop_area.width -= self.crop_area.left - _old_left\r\n                if (options.ratio) {\r\n                    let _old_height = self.crop_area.height\r\n                    self.crop_area.height = self.crop_area.width / options.ratio\r\n                    self.crop_area.top -= self.crop_area.height - _old_height\r\n                }\r\n            }\r\n        } else {\r\n            // Right\r\n            let _right = (self.preview_offset.left + preview_inner.clientWidth) - e.pageX\r\n            if (_right < preview_inner.clientWidth - self.crop_area.left && _right > 0) {\r\n                self.crop_area.width = Math.round(preview_inner.clientWidth - self.crop_area.left - _right)\r\n                if (options.ratio) {\r\n                    self.crop_area.height = self.crop_area.width / options.ratio\r\n                }\r\n            }\r\n        }\r\n        _update_overlay()\r\n    }\r\n\r\n    function _corner_move(e) {\r\n        // Top\r\n        if (cur_corner.index == 1 || cur_corner.index == 2) {\r\n            let _top = e.pageY - self.preview_offset.top\r\n            if (_top < preview_inner.clientHeight && _top > 0) {\r\n                let _old_top = self.crop_area.top\r\n                self.crop_area.top = Math.round(_top)\r\n                self.crop_area.height -= self.crop_area.top - _old_top\r\n                if (options.ratio) {\r\n                    let _old_width = self.crop_area.width;\r\n                    self.crop_area.width = self.crop_area.height * options.ratio\r\n                    if (cur_corner.index == 1) {\r\n                        self.crop_area.left -= self.crop_area.width - _old_width\r\n                    }\r\n                    _update_overlay()\r\n                    return\r\n                }\r\n            }\r\n        }\r\n        // Left\r\n        if (cur_corner.index == 1 || cur_corner.index == 4) {\r\n            let _left = e.pageX - self.preview_offset.left\r\n            if (_left < preview_inner.clientWidth && _left > 0) {\r\n                let _old_left = self.crop_area.left\r\n                self.crop_area.left = Math.round(_left)\r\n                self.crop_area.width -= self.crop_area.left - _old_left\r\n                if (options.ratio) {\r\n                    let _old_height = self.crop_area.height\r\n                    self.crop_area.height = self.crop_area.width / options.ratio\r\n                    if (cur_corner.index == 1) {\r\n                        self.crop_area.top -= self.crop_area.height - _old_height\r\n                    }\r\n                    _update_overlay()\r\n                    return\r\n                }\r\n            }\r\n        }\r\n        // Bottom\r\n        if (cur_corner.index == 3 || cur_corner.index == 4) {\r\n            let _bottom = (self.preview_offset.top + preview_inner.clientHeight) - e.pageY\r\n            if (_bottom < preview_inner.clientHeight - self.crop_area.top && _bottom > 0) {\r\n                self.crop_area.height = Math.round(preview_inner.clientHeight - self.crop_area.top - _bottom)\r\n            }\r\n        }\r\n        // Right\r\n        if (cur_corner.index == 2 || cur_corner.index == 3) {\r\n            let _right = (self.preview_offset.left + preview_inner.clientWidth) - e.pageX\r\n            if (_right < preview_inner.clientWidth - self.crop_area.left && _right > 0) {\r\n                self.crop_area.width = Math.round(preview_inner.clientWidth - self.crop_area.left - _right)\r\n                if (options.ratio) {\r\n                    self.crop_area.height = self.crop_area.width / options.ratio\r\n                }\r\n            }\r\n        }\r\n        _update_overlay()\r\n    }\r\n\r\n    function _area_drag(e) {\r\n        if (self.last_position) {\r\n            /* Get new crop position */\r\n            let deltaX = e.clientX - self.last_position.x,\r\n                deltaY = e.clientY - self.last_position.y,\r\n                new_pos = {\r\n                    left: self.crop_area.left + deltaX < 0 ? 0 : self.crop_area.left + deltaX,\r\n                    top: self.crop_area.top + deltaY < 0 ? 0 : self.crop_area.top + deltaY\r\n                }\r\n\r\n            /* Restrict to inside crop area */\r\n            if (new_pos.left > preview_inner.clientWidth - self.crop_area.width) new_pos.left = self.crop_area.left\r\n            if (new_pos.top > preview_inner.clientHeight - self.crop_area.height) new_pos.top = self.crop_area.top\r\n\r\n            /* Update overlay then render */\r\n            self.crop_area = Object.assign(self.crop_area, new_pos)\r\n            _update_overlay()\r\n        }\r\n        self.last_position = {\r\n            x: e.clientX,\r\n            y: e.clientY\r\n        }\r\n    }\r\n\r\n    function _update_offset() {\r\n        /* Set initial crop area */\r\n        if (typeof self.crop_area == 'undefined') {\r\n            self.crop_area = {\r\n                left: _convert_to_px(options.area ? options.area.left : '10px', img_el.clientWidth),\r\n                top: _convert_to_px(options.area ? options.area.top : '10px', img_el.clientHeight),\r\n                width: _convert_to_px(options.area ? options.area.width : '50px', img_el.clientWidth),\r\n                height: _convert_to_px(options.area ? options.area.height : '50px', img_el.clientHeight)\r\n            }\r\n            if (options.ratio) {\r\n                self.crop_area.height = self.crop_area.width / options.ratio\r\n            }\r\n        }\r\n        self.preview_offset = preview_inner.getBoundingClientRect()\r\n    }\r\n\r\n    /* Update overlay dimensions */\r\n    function _update_overlay() {\r\n        /* Constrain to image preview */\r\n        self.crop_area.left = Math.max(self.crop_area.left, 0)\r\n        self.crop_area.top = Math.max(self.crop_area.top, 0)\r\n        self.crop_area.width = self.crop_area.left + self.crop_area.width <= preview_inner.clientWidth\r\n            ? self.crop_area.width\r\n            : preview_inner.clientWidth - self.crop_area.left\r\n        self.crop_area.height = self.crop_area.top + self.crop_area.height <= preview_inner.clientHeight\r\n            ? self.crop_area.height\r\n            : preview_inner.clientHeight - self.crop_area.top\r\n\r\n        /* Apply styles to crop overlay */\r\n        crop_overlay.style.left = self.crop_area.left + 'px'\r\n        crop_overlay.style.top = self.crop_area.top + 'px'\r\n        crop_overlay.style.width = self.crop_area.width + 'px'\r\n        crop_overlay.style.height = self.crop_area.height + 'px'\r\n    }\r\n\r\n    /* Fetch cropped image preview from server */\r\n    function _update_preview() {\r\n        /* Scale crop dimensions to real image size */\r\n        let scale = img_el ? (img_el.naturalWidth / img_el.clientWidth) : 1,\r\n            img_options = {\r\n                img: self.img_url\r\n            }\r\n\r\n        for (let dim in self.crop_area) {\r\n            img_options[dim] = Math.round(self.crop_area[dim] * scale)\r\n        }\r\n\r\n        let options = {\r\n            method: 'POST',\r\n            body: JSON.stringify(img_options),\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json'\r\n            })\r\n        }\r\n        fetch('/preview', options)\r\n            .then(response => response.text())\r\n            .then(base64_preview => {\r\n                if (!self.preview_img) {\r\n                    self.preview_img = document.createElement('img')\r\n                    self.preview.appendChild(self.preview_img)\r\n                }\r\n                self.preview_img.src = 'data:image/jpeg;base64,' + base64_preview\r\n            })\r\n    }\r\n\r\n    /* Convert value to px inside container */\r\n    function _convert_to_px(value, total) {\r\n        /* Validate value, convert value to string */\r\n        if (typeof value == 'undefined')\r\n            return 0\r\n        value += ''\r\n\r\n        /* Split value into unit and number */\r\n        let number = parseFloat(value.replace(/[^-\\d]+/, '')),\r\n            unit = value.replace(/[-\\d]+/, '')\r\n\r\n        if (unit == '%')\r\n            return total * number / 100\r\n        else if (unit == 'px')\r\n            return number < total ? number : total\r\n        else\r\n            return number\r\n    }\r\n\r\n    /* Limit calls to a function */\r\n    function _throttle(callback, limit) {\r\n        let wait = false\r\n        return () => {\r\n            if (!wait) {\r\n                callback.apply(null, arguments)\r\n                wait = true\r\n                setTimeout(() => {\r\n                    wait = false\r\n                }, limit)\r\n            }\r\n        }\r\n    }\r\n\r\n    /* Generate markup for img cropper */\r\n    function generate_crop_template() {\r\n        /* Upload button */\r\n        upload_btn = document.createElement('button')\r\n        upload_btn.classList.add('btn')\r\n        upload_btn.classList.add('upload-btn')\r\n        let _upload_img = document.createElement('img')\r\n        _upload_img.alt = \"Upload Image\"\r\n        _upload_img.src = \"/imgs/upload.svg\"\r\n        upload_btn.appendChild(_upload_img)\r\n\r\n        /* Remove button */\r\n        remove_btn = document.createElement('button')\r\n        remove_btn.classList.add('btn')\r\n        remove_btn.classList.add('remove-btn')\r\n        let _remove_img = document.createElement('img')\r\n        _remove_img.alt = \"Remove\"\r\n        _remove_img.src = \"/imgs/remove.svg\"\r\n        remove_btn.appendChild(_remove_img)\r\n\r\n        /* Form */\r\n        input = document.createElement('input')\r\n        input.type = 'file'\r\n        input.classList.add('hidden')\r\n        form = document.createElement('form')\r\n        form.action = \"/upload-file\"\r\n        form.appendChild(input)\r\n\r\n        /* Image preview */\r\n        preview = document.createElement('div')\r\n        preview.classList.add('crop-preview')\r\n        preview_inner = document.createElement('div')\r\n        preview_inner.classList.add('crop-inner')\r\n        let _placeholder = document.createElement('p')\r\n        _placeholder.classList.add('hidden')\r\n        _placeholder.textContent = \"Please choose an image to start cropping...\"\r\n        preview.appendChild(_placeholder)\r\n        preview.appendChild(preview_inner)\r\n\r\n        /* Image */\r\n        img_el = document.createElement('img')\r\n        img_el.src = \"/uploads/\" + self.img_url\r\n        img_el.alt = \"crop preview\"\r\n        preview_inner.appendChild(img_el)\r\n\r\n        /* Crop area */\r\n        crop_overlay = document.createElement('div')\r\n        crop_overlay.classList.add('crop-overlay')\r\n        for (let i = 8; i > 0; i--) {\r\n            let el = document.createElement('div')\r\n            el.classList.add(i > 4 ? 'side' : 'corner')\r\n            el.addEventListener('mousedown', i > 4 ? _side_click_start : _corner_click_start, false)\r\n            crop_overlay.appendChild(el)\r\n        }\r\n        preview_inner.appendChild(crop_overlay)\r\n\r\n        /* Append everything to self.element */\r\n        self.element.appendChild(upload_btn)\r\n        self.element.appendChild(remove_btn)\r\n        self.element.appendChild(preview)\r\n        self.element.appendChild(form)\r\n    }\r\n\r\n    /* Bind events */\r\n    function bind_events() {\r\n        img_el.addEventListener('load', _update_offset)\r\n        img_el.addEventListener('load', _update_overlay)\r\n        img_el.addEventListener('load', _update_preview)\r\n        upload_btn.addEventListener('click', self.choose_image, false)\r\n        remove_btn.addEventListener('click', remove_preview, false)\r\n        input.addEventListener('change', show_preview, false)\r\n        crop_overlay.addEventListener('mousedown', (e) => {\r\n            if (!e.target.classList.contains('crop-overlay')) return\r\n            document.addEventListener('mousemove', _area_drag, false)\r\n        }, false)\r\n        document.addEventListener('mouseup', () => {\r\n            self.last_position = null\r\n            document.removeEventListener('mousemove', _side_move, false)\r\n            document.removeEventListener('mousemove', _corner_move, false)\r\n            document.removeEventListener('mousemove', _area_drag, false)\r\n            _update_preview()\r\n        }, false)\r\n        window.addEventListener('resize', _throttle(() => {\r\n            _update_offset()\r\n            _update_overlay()\r\n            self.last_position = null\r\n        }, 50), false)\r\n    }\r\n\r\n\r\n\r\n    /* Initialise Crop */\r\n    (() => {\r\n        if (options.element) {\r\n            /* Get DOM node from selector */\r\n            self.element = document.querySelector(options.element)\r\n\r\n            /* Get preview if set */\r\n            if (options.preview) {\r\n                self.preview = document.querySelector(options.preview)\r\n            }\r\n\r\n            self.img_url = options.img\r\n        } else {\r\n            self.element = document.querySelector(options)\r\n        }\r\n        self.img_url = self.img_url ? self.img_url : 'test.png'\r\n\r\n        generate_crop_template()\r\n        bind_events()\r\n    })()\r\n\r\n    return self\r\n}\r\n"],"file":"img-crop.js"}