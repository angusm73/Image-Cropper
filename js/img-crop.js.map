{"version":3,"sources":["img-crop.js"],"names":["Crop","options","self","upload_btn","remove_btn","form","input","preview","preview_inner","img_el","crop_overlay","element","document","querySelector","choose_image","dispatchEvent","MouseEvent","view","window","bubbles","cancelable","show_preview","files","reader","FileReader","onload","e","style","display","src","target","result","classList","remove","children","add","readAsDataURL","_update_offset","remove_preview","createElement","type","addEventListener","appendChild","cur_side","_side_click_start","el","index","Array","prototype","indexOf","call","parentElement","_side_move","preventDefault","cur_corner","_corner_click_start","_corner_move","crop_area","left","_convert_to_px","area","clientWidth","top","clientHeight","width","height","preview_offset","getBoundingClientRect","_top","pageY","_old_top","Math","round","_bottom","_left","pageX","_old_left","_right","_update_overlay","_area_drag","last_position","deltaX","clientX","x","deltaY","clientY","y","new_pos","Object","assign","max","_update_preview","scale","naturalWidth","_real_crop_area","dim","method","body","JSON","stringify","headers","Headers","fetch","then","response","text","preview_img","base64_preview","value","total","number","parseFloat","replace","unit","_throttle","callback","limit","wait","apply","setTimeout","generate_crop_template","innerHTML","action","_placeholder","textContent","alt","i","bind_events","contains","removeEventListener"],"mappings":"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","file":"img-crop.js","sourcesContent":["function Crop(options) {\r\n    var self = this\r\n\r\n    /* Scope all elements */\r\n    let upload_btn, remove_btn, form, input, preview, preview_inner, img_el, crop_overlay\r\n\r\n    /* Get DOM node from selector */\r\n    this.element = document.querySelector(typeof options == 'object' ? options.element : options)\r\n\r\n    /* Get preview if set */\r\n    if (options.preview) {\r\n        this.preview = document.querySelector(options.preview)\r\n    }\r\n\r\n\r\n\r\n    /* ---------------- */\r\n    /*  Crop Functions  */\r\n    /* ---------------- */\r\n\r\n    /* Open file browser */\r\n    function choose_image() {\r\n        input.dispatchEvent(new MouseEvent('click', {\r\n            view: window,\r\n            bubbles: true,\r\n            cancelable: true\r\n        }))\r\n    }\r\n\r\n    /* Show image preview */\r\n    function show_preview() {\r\n        if (input.files && input.files[0]) {\r\n            let reader = new FileReader()\r\n            reader.onload = (e) => {\r\n                img_el.style.display = 'block'\r\n                img_el.src = e.target.result\r\n                preview.classList.remove('no-img')\r\n                preview.children[0].classList.add('hidden')\r\n            }\r\n            reader.readAsDataURL(input.files[0])\r\n        }\r\n        _update_offset()\r\n    }\r\n\r\n    /* Remove image preview */\r\n    function remove_preview() {\r\n        img_el.style.display = 'none'\r\n        preview.classList.add('no-img')\r\n        preview.children[0].classList.remove('hidden')\r\n        input.remove()\r\n        input = document.createElement('input')\r\n        input.type = 'file'\r\n        input.classList.add('hidden')\r\n        input.addEventListener('change', show_preview, false)\r\n        self.element.querySelector('form').appendChild(input)\r\n    }\r\n\r\n    var cur_side\r\n    function _side_click_start(e) {\r\n        cur_side = {\r\n            el: e.target,\r\n            index: Array.prototype.indexOf.call(e.target.parentElement.children, e.target) + 1\r\n        }\r\n        document.addEventListener('mousemove', _side_move, false)\r\n        e.preventDefault()\r\n        return false\r\n    }\r\n\r\n    var cur_corner\r\n    function _corner_click_start(e) {\r\n        cur_corner = {\r\n            el: e.target,\r\n            index: Array.prototype.indexOf.call(e.target.parentElement.children, e.target) - 3\r\n        }\r\n        document.addEventListener('mousemove', _corner_move, false)\r\n        e.preventDefault()\r\n        return false\r\n    }\r\n\r\n    function _update_offset() {\r\n        /* Set initial crop area */\r\n        if (typeof self.crop_area == 'undefined') {\r\n            self.crop_area = {\r\n                left: _convert_to_px(options.area ? options.area.left : '10px', img_el.clientWidth),\r\n                top: _convert_to_px(options.area ? options.area.top : '10px', img_el.clientHeight),\r\n                width: _convert_to_px(options.area ? options.area.width : '50px', img_el.clientWidth),\r\n                height: _convert_to_px(options.area ? options.area.height : '50px', img_el.clientHeight)\r\n            }\r\n        }\r\n        self.preview_offset = preview_inner.getBoundingClientRect()\r\n    }\r\n\r\n    function _side_move(e) {\r\n        if (cur_side.index == 1) {\r\n            // Top\r\n            let _top = e.pageY - self.preview_offset.top\r\n            if (_top < preview_inner.clientHeight && _top > 0) {\r\n                let _old_top = self.crop_area.top\r\n                self.crop_area.top = Math.round(_top)\r\n                self.crop_area.height -= self.crop_area.top - _old_top\r\n            }\r\n        } else if (cur_side.index == 3) {\r\n            // Bottom\r\n            let _bottom = (self.preview_offset.top + preview_inner.clientHeight) - e.pageY\r\n            if (_bottom < preview_inner.clientHeight - self.crop_area.top && _bottom > 0) {\r\n                self.crop_area.height = Math.round(preview_inner.clientHeight - self.crop_area.top - _bottom)\r\n            }\r\n        } else if (cur_side.index == 4) {\r\n            // Left\r\n            let _left = e.pageX - self.preview_offset.left\r\n            if (_left < preview_inner.clientWidth && _left > 0) {\r\n                let _old_left = self.crop_area.left\r\n                self.crop_area.left = Math.round(_left)\r\n                self.crop_area.width -= self.crop_area.left - _old_left\r\n            }\r\n        } else {\r\n            // Right\r\n            let _right = (self.preview_offset.left + preview_inner.clientWidth) - e.pageX\r\n            if (_right < preview_inner.clientWidth - self.crop_area.left && _right > 0) {\r\n                self.crop_area.width = Math.round(preview_inner.clientWidth - self.crop_area.left - _right)\r\n            }\r\n        }\r\n        _update_overlay()\r\n    }\r\n\r\n    function _corner_move(e) {\r\n        // Top\r\n        if (cur_corner.index == 1 || cur_corner.index == 2) {\r\n            let _top = e.pageY - self.preview_offset.top\r\n            if (_top < preview_inner.clientHeight && _top > 0) {\r\n                let _old_top = self.crop_area.top\r\n                self.crop_area.top = Math.round(_top)\r\n                self.crop_area.height -= self.crop_area.top - _old_top\r\n            }\r\n        }\r\n        // Bottom\r\n        if (cur_corner.index == 3 || cur_corner.index == 4) {\r\n            let _bottom = (self.preview_offset.top + preview_inner.clientHeight) - e.pageY\r\n            if (_bottom < preview_inner.clientHeight - self.crop_area.top && _bottom > 0) {\r\n                self.crop_area.height = Math.round(preview_inner.clientHeight - self.crop_area.top - _bottom)\r\n            }\r\n        }\r\n        // Left\r\n        if (cur_corner.index == 1 || cur_corner.index == 4) {\r\n            let _left = e.pageX - self.preview_offset.left\r\n            if (_left < preview_inner.clientWidth && _left > 0) {\r\n                let _old_left = self.crop_area.left\r\n                self.crop_area.left = Math.round(_left)\r\n                self.crop_area.width -= self.crop_area.left - _old_left\r\n            }\r\n        }\r\n        // Right\r\n        if (cur_corner.index == 2 || cur_corner.index == 3) {\r\n            let _right = (self.preview_offset.left + preview_inner.clientWidth) - e.pageX\r\n            if (_right < preview_inner.clientWidth - self.crop_area.left && _right > 0) {\r\n                self.crop_area.width = Math.round(preview_inner.clientWidth - self.crop_area.left - _right)\r\n            }\r\n        }\r\n        _update_overlay()\r\n    }\r\n\r\n    function _area_drag(e) {\r\n        if (self.last_position) {\r\n            /* Get new crop position */\r\n            let deltaX = e.clientX - self.last_position.x,\r\n                deltaY = e.clientY - self.last_position.y,\r\n                new_pos = {\r\n                    left: self.crop_area.left + deltaX < 0 ? 0 : self.crop_area.left + deltaX,\r\n                    top: self.crop_area.top + deltaY < 0 ? 0 : self.crop_area.top + deltaY\r\n                }\r\n\r\n            /* Restrict to inside crop area */\r\n            if (new_pos.left > preview_inner.clientWidth - self.crop_area.width) new_pos.left = self.crop_area.left\r\n            if (new_pos.top > preview_inner.clientHeight - self.crop_area.height) new_pos.top = self.crop_area.top\r\n\r\n            /* Update overlay then render */\r\n            self.crop_area = Object.assign(self.crop_area, new_pos)\r\n            _update_overlay()\r\n        }\r\n        self.last_position = {\r\n            x: e.clientX,\r\n            y: e.clientY\r\n        }\r\n    }\r\n\r\n    /* Update overlay dimensions */\r\n    function _update_overlay() {\r\n        /* Constrain to image preview */\r\n        self.crop_area.left = Math.max(self.crop_area.left, 0)\r\n        self.crop_area.top = Math.max(self.crop_area.top, 0)\r\n        self.crop_area.width = self.crop_area.left + self.crop_area.width < preview_inner.clientWidth\r\n            ? self.crop_area.width\r\n            : preview_inner.clientWidth - self.crop_area.left\r\n        self.crop_area.height = self.crop_area.top + self.crop_area.height < preview_inner.clientHeight\r\n            ? self.crop_area.height\r\n            : preview_inner.clientHeight - self.crop_area.top\r\n\r\n        /* Apply styles to crop overlay */\r\n        crop_overlay.style.left = self.crop_area.left + 'px'\r\n        crop_overlay.style.top = self.crop_area.top + 'px'\r\n        crop_overlay.style.width = self.crop_area.width + 'px'\r\n        crop_overlay.style.height = self.crop_area.height + 'px'\r\n    }\r\n\r\n    /* Fetch cropped image preview from server */\r\n    function _update_preview() {\r\n        /* Scale crop dimensions to real image size */\r\n        let scale = img_el.naturalWidth / img_el.clientWidth,\r\n            _real_crop_area = {}\r\n        for (let dim in self.crop_area) {\r\n            _real_crop_area[dim] = Math.round(self.crop_area[dim] * scale)\r\n        }\r\n\r\n        let options = {\r\n                method: 'POST',\r\n                body: JSON.stringify(_real_crop_area),\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json'\r\n                })\r\n            }\r\n        fetch('/preview', options)\r\n            .then(response => {\r\n                return response.text()\r\n            })\r\n            .then(base64_preview => {\r\n                if (!self.preview_img) {\r\n                    self.preview_img = document.createElement('img')\r\n                    self.preview.appendChild(self.preview_img)\r\n                }\r\n                self.preview_img.src = 'data:image/jpeg;base64,' + base64_preview\r\n            })\r\n    }\r\n\r\n    /* Convert value to px inside container */\r\n    function _convert_to_px(value, total) {\r\n        /* Validate value, convert value to string */\r\n        if (typeof value == 'undefined')\r\n            return 0\r\n        value += ''\r\n\r\n        /* Split value into unit and number */\r\n        let number = parseFloat(value.replace(/[^-\\d]+/, '')),\r\n            unit = value.replace(/[-\\d]+/, '')\r\n\r\n        if (unit == '%')\r\n            return total * number / 100\r\n        else if (unit == 'px')\r\n            return number < total ? number : total;\r\n        else\r\n            return number\r\n    }\r\n\r\n    /* Limit calls to a function */\r\n    function _throttle(callback, limit) {\r\n        let wait = false\r\n        return () => {\r\n            if (!wait) {\r\n                callback.apply(null, arguments)\r\n                wait = true\r\n                setTimeout(() => {\r\n                    wait = false\r\n                }, limit)\r\n            }\r\n        }\r\n    }\r\n\r\n    /* Generate markup for img cropper */\r\n    function generate_crop_template() {\r\n        /* Upload button */\r\n        upload_btn = document.createElement('button')\r\n        upload_btn.classList.add('btn')\r\n        upload_btn.classList.add('upload-btn')\r\n        upload_btn.innerHTML = \"Upload Image\"\r\n\r\n        /* Remove button */\r\n        remove_btn = document.createElement('button')\r\n        remove_btn.classList.add('btn')\r\n        remove_btn.classList.add('remove-btn')\r\n        remove_btn.innerHTML = \"Remove\"\r\n\r\n        /* Form */\r\n        input = document.createElement('input')\r\n        input.type = 'file'\r\n        input.classList.add('hidden')\r\n        form = document.createElement('form')\r\n        form.action = \"/upload-file\"\r\n        form.appendChild(input)\r\n\r\n        /* Image preview */\r\n        preview = document.createElement('div')\r\n        preview.classList.add('crop-preview')\r\n        preview_inner = document.createElement('div')\r\n        preview_inner.classList.add('crop-inner')\r\n        let _placeholder = document.createElement('p')\r\n        _placeholder.classList.add('hidden')\r\n        _placeholder.textContent = \"Please choose an image to start cropping...\"\r\n        preview.appendChild(_placeholder)\r\n        preview.appendChild(remove_btn)\r\n        preview.appendChild(preview_inner)\r\n\r\n        /* Image */\r\n        img_el = document.createElement('img')\r\n        img_el.src = \"/test.png\"\r\n        img_el.alt = \"crop preview\"\r\n        preview_inner.appendChild(img_el)\r\n\r\n        /* Crop area */\r\n        crop_overlay = document.createElement('div')\r\n        crop_overlay.classList.add('crop-overlay')\r\n        for (let i = 8; i > 0; i--) {\r\n            let el = document.createElement('div')\r\n            el.classList.add(i > 4 ? 'side' : 'corner')\r\n            el.addEventListener('mousedown', i > 4 ? _side_click_start : _corner_click_start, false)\r\n            crop_overlay.appendChild(el)\r\n        }\r\n        preview_inner.appendChild(crop_overlay)\r\n\r\n        /* Append everything to self.element */\r\n        self.element.appendChild(upload_btn)\r\n        self.element.appendChild(preview)\r\n        self.element.appendChild(form)\r\n    }\r\n\r\n    /* Bind events */\r\n    function bind_events() {\r\n        img_el.addEventListener('load', _update_offset)\r\n        img_el.addEventListener('load', _update_overlay)\r\n        img_el.addEventListener('load', _update_preview)\r\n        upload_btn.addEventListener('click', choose_image, false)\r\n        remove_btn.addEventListener('click', remove_preview, false)\r\n        input.addEventListener('change', show_preview, false)\r\n        crop_overlay.addEventListener('mousedown', (e) => {\r\n            if (!e.target.classList.contains('crop-overlay')) return\r\n            document.addEventListener('mousemove', _area_drag, false)\r\n        }, false)\r\n        document.addEventListener('mouseup', () => {\r\n            self.last_position = null\r\n            document.removeEventListener('mousemove', _side_move, false)\r\n            document.removeEventListener('mousemove', _corner_move, false)\r\n            document.removeEventListener('mousemove', _area_drag, false)\r\n            _update_preview()\r\n        }, false)\r\n        window.addEventListener('resize', _throttle(() => {\r\n            _update_offset()\r\n            _update_overlay()\r\n            self.last_position = null\r\n        }, 50), false)\r\n    }\r\n\r\n\r\n\r\n    /* Initialise Crop */\r\n    (() => {\r\n        generate_crop_template()\r\n        bind_events()\r\n    })()\r\n\r\n    /* Public functions */\r\n    this.choose_image = choose_image\r\n\r\n    return this\r\n\r\n}\r\n"]}